name: deploy docker image to ec2

on: 
    push

jobs:
    build:
        runs-on: self-hosted

        steps:
          - name: code check
            uses: actions/checkout@v3 

          #- name: Login to Docker Hub
           # uses: docker/login-action@v2
            #with:
             # username: ${{ secrets.DOCKER_USERNAME
              #password: ${{ secret

         ## - name: Set up Docker Buildx
           # uses: docker/setup-buildx-action@v1

          #- name: Build and Push Docker Image
          #  env:
           #   DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }
            #  DOCKERHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }
           # run: |
            #  echo "$DOCKERHUB_ACCESS_TOKEN" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
             # docker buildx create --use
              #docker buildx build --platform linux/amd64,linux/arm64 -t $DOCKERHUB_USERNAME/your-image-name:latest . --push
                    
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
                aws-access-key-id: ${{ secrets.ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.ACCESS_TOKEN}}
                aws-region: your-aws-region
      
          - name: Login to Amazon ECR
            id: login-ecr
            run: |
                echo ${{ secrets.AWS_ECR_REGISTRY }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.your-aws-region.amazonaws.com
      
          - name: Build and Push Docker Image to ECR
            env:
                ECR_REPOSITORY: your-ecr-repository
            run: |
                docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.your-aws-region.amazonaws.com/$ECR_REPOSITORY:latest .
                docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.your-aws-region.amazonaws.com/$ECR_REPOSITORY:latest
          